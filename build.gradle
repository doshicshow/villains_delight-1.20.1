plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
	id 'org.jetbrains.kotlin.jvm' version '2.1.21'
}


repositories {
	maven { url = 'https://api.modrinth.com/maven'}
	maven { url = 'https://maven.parchmentmc.org' }
	maven { url = 'https://www.cursemaven.com' }
	maven { url = 'https://maven.firstdarkdev.xyz/snapshots' }
	maven {
		name 'Ladysnake Mods'
		url = 'https://maven.ladysnake.org/releases'
	}
	maven {
		name 'BlameJared'
		url = 'https://maven.blamejared.com/'
	}
	maven { url = 'https://maven.ryanliptak.com/' }
	maven { url = 'https://maven.fabricmc.net/' }
	maven { url = 'https://mvn.devos.one/snapshots/' }
	maven { url = 'https://mvn.devos.one/releases/' }
	maven { url = 'https://jitpack.io/' }
	maven { url = 'https://maven.shedaniel.me/' }
	maven { url = 'https://maven.terraformersmc.com/' }
	maven {
		url = 'https://maven.jamieswhiteshirt.com/libs-release'
		content {
			includeGroup 'com.jamieswhiteshirt'
		}
	}
	maven { url = 'https://maven.draylar.dev/releases/' }
}

loom {
	splitEnvironmentSourceSets()
	mods {
		villains_delight {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}
}

fabricApi {
	configureDataGeneration()
}

dependencies {
	minecraft "com.mojang:minecraft:${minecraft_version}"
	mappings "net.fabricmc:yarn:${yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
	modImplementation "net.fabricmc:fabric-language-kotlin:${fabric_kotlin_version}"
	modImplementation "maven.modrinth:farmers-delight-refabricated:${farmers_delight_version}"

	implementation("io.github.llamalad7:mixinextras-fabric:${mixin_extras_version}")
	annotationProcessor "io.github.llamalad7:mixinextras-fabric:${mixin_extras_version}"

	(modImplementation("com.github.Chocohead:Fabric-ASM:${fabric_asm_version}")) {
		exclude group: "net.fabricmc.fabric-api"
	}

	for (module in port_lib_modules.split(",")) {
		include modApi("io.github.fabricators_of_create.Porting-Lib:${module}:${port_lib_version}")
	}

	modLocalRuntime "com.terraformersmc:modmenu:${modmenu_version}"
	modCompileOnly "com.blamejared.crafttweaker:CraftTweaker-fabric-1.20.1:${crafttweaker_version}"
	modCompileOnly "mezz.jei:jei-${minecraft_version}-common-api:${jei_version}"
	modCompileOnly "mezz.jei:jei-${minecraft_version}-fabric-api:${jei_version}"
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${rei_version}"
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:${rei_version}"
	modCompileOnly("dev.emi:emi-fabric:${emi_version}:api")
}

processResources {
	inputs.property "version", project.version
}

tasks.withType(JavaCompile).configureEach {
	options.release = 17
	options.fork = true
	options.forkOptions.jvmArgs += ['-Xmx1G']
}


tasks.register('printClasspath') {
	doLast {
		println "Classpath length: " + sourceSets.main.runtimeClasspath.asPath.length()
		sourceSets.main.runtimeClasspath.each { println it }
	}
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}